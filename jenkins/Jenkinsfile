pipeline {
  agent any

  environment {
    IMAGE_NAME = 'rani19/backend'
    TAG = "build-${env.BUILD_NUMBER}"
    DOCKER_CREDENTIALS_ID = 'docker-hub-creds'
    DEV_REPO_URL = 'https://github.com/RaniSaed/smart-retail-dev.git'
    CONFIG_REPO_URL = 'https://github.com/RaniSaed/smart-retail-config.git'
    PRIMARY_NS = 'default'
    DR_NS = 'dr-region'
    KUBECONFIG = '/var/jenkins_home/.kube/config'
  }

  stages {
    stage('Clone Config Repo') {
      steps {
        echo '📁 Cloning smart-retail-config repository...'
        checkout([$class: 'GitSCM', userRemoteConfigs: [[url: "${CONFIG_REPO_URL}"]]])
      }
    }

    stage('Clone Dev Repo') {
      steps {
        echo '📥 Cloning smart-retail-dev repository...'
        dir('dev') {
          git url: "${DEV_REPO_URL}", branch: 'main'
        }
      }
    }

    stage('Lint Backend Code') {
      steps {
        echo '🔍 Linting Flask Backend...'
        dir('dev/backend') {
          sh '''
            if ! command -v pip3 &> /dev/null; then
              echo "❌ pip3 not found!"
              exit 1
            fi
            pip3 install --break-system-packages --upgrade pip
            pip3 install flake8
            flake8 app.py || echo "⚠️ Lint warnings detected but continuing"
          '''
        }
      }
    }

    stage('Unit Tests') {
      when {
        expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
      }
      steps {
        echo '🧪 Running unit tests...'
        dir('dev/backend') {
          sh '''
            pip3 install pytest
            pytest || echo "⚠️ Some tests failed"
          '''
        }
      }
    }

    // נמשיך את שאר השלבים בהמשך
  }

  post {
    failure {
      echo "❌ Deployment Failed."
    }
    success {
      echo "✅ Pipeline Completed Successfully."
    }
  }
}
