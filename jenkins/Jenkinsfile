pipeline {
  agent any

  environment {
    IMAGE_NAME = 'rani19/backend'
    TAG = "build-${env.BUILD_NUMBER}"
    DOCKER_CREDENTIALS_ID = 'docker-hub-creds'
    DEV_REPO_URL = 'https://github.com/RaniSaed/smart-retail-dev.git'
    CONFIG_REPO_URL = 'https://github.com/RaniSaed/smart-retail-config.git'
    PRIMARY_NS = 'default'
    DR_NS = 'dr-region'
  }

  stages {
    stage('Clone Dev Repo') {
      steps {
        echo '📥 Cloning smart-retail-dev repository...'
        dir('dev') {
          git url: "${DEV_REPO_URL}", branch: 'main'
        }
      }
    }

    stage('Build & Push Docker Image') {
      steps {
        dir('dev/backend') {
          script {
            docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS_ID) {
              def image = docker.build("${IMAGE_NAME}:${TAG}")
              image.push()
              image.push('latest')
            }
          }
        }
      }
    }

    stage('Clone Config Repo') {
      steps {
        echo '📁 Cloning smart-retail-config repository...'
        dir('config') {
          git url: "${CONFIG_REPO_URL}", branch: 'main'
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
          dir('config/k8s') {
            // 💡 שים לב לנתיב הנכון
            sh 'kubectl apply -f backend/deployment.yaml -n default'
            sh 'kubectl apply -f backend/service.yaml -n default'
          }
        }
      }
    }
  }

  post {
    success {
      echo '✅ Build and deployment successful!'
    }
    failure {
      echo '❌ Build failed!'
    }
  }
}
