pipeline {
  agent any

  environment {
    IMAGE_NAME = 'rani19/backend'
    TAG = "build-${env.BUILD_NUMBER}"
    DOCKER_CREDENTIALS_ID = 'docker-hub-creds'
    DEV_REPO_URL = 'https://github.com/RaniSaed/smart-retail-dev.git'
    CONFIG_REPO_URL = 'https://github.com/RaniSaed/smart-retail-config.git'
  }

  stages {
    stage('Clone Dev Repo') {
      steps {
        dir('dev') {
          git url: "${DEV_REPO_URL}", branch: 'main'
        }
      }
    }

    stage('Build & Push Docker Image') {
      steps {
        dir('dev/backend') {
          script {
            docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_CREDENTIALS_ID}") {
              def image = docker.build("${IMAGE_NAME}:${TAG}")
              image.push()
              image.push('latest')
            }
          }
        }
      }
    }

    stage('Clone Config Repo') {
      steps {
        dir('config') {
          git url: "${CONFIG_REPO_URL}", branch: 'main'
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        echo "üöÄ Deploying to Kubernetes"
        sh """
          sed -i 's|image:.*|image: ${IMAGE_NAME}:${TAG}|' config/k8s/backend/deployment.yaml
          kubectl apply -f config/k8s/backend/deployment.yaml
        """
      }
    }
  }

  post {
    success {
      echo '‚úÖ CI/CD complete!'
    }
    failure {
      echo '‚ùå Failed, check logs!'
    }
  }
}
